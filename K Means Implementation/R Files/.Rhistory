df1$Region[which(df1$StateName %in% NorthEast)]<-"North East"
df1$Region[which(df1$StateName %in% South)]<-"South"
df1$Region[which(df1$StateName %in% west)]<-"West"
df1$Region[which(df1$StateName %in% rockies)]<-"Rockies"
df1$Region[which(df1$StateName %in% midwest)]<-"Mid West"
df1$Region[which(df1$StateName %in% MaEc)]<-"Mid Atlantic / East Central"
boxplot(df1$value,main="Box plot of the Republican votes from 1956 to 1972")
boxplot(df1$value~df1$Region, main="Box plot of Republican votes by Region")
qplot(variable,value,data=df1,facets = Region~.,color=StateName,geom="line")
df1["Region"]<-as.character("NA")
NorthEast=c("Connecticut","Delaware","Maine","Massachusetts","New Hampshire","New Jersey","New York","Pennsylvania","Rhode Island","Vermont")
MaEc<-c("Kentucky","Maryland","North Carolina","South Carolina","Tennessee","Virginia","West Virginia")
South<-c("Alabama","Arkansas","Florida","Georgia","Louisiana","Mississippi","Oklahoma","Texas")
midwest<-c("Illinois","Indiana","Iowa","Kansas","Michigan","Minnesota","Missouri","Nebraska","Ohio","Wisconsin")
rockies<-c("Colorado","Idaho","Montana","North Dakota","South Dakota","Utah","Wyoming")
west<-c("Alaska","Arizona","California","Hawaii","Nevada","New Mexico","Oregon","Washington")
df1$Region[which(df1$StateName %in% NorthEast)]<-"North East"
df1$Region[which(df1$StateName %in% South)]<-"South"
df1$Region[which(df1$StateName %in% west)]<-"West"
df1$Region[which(df1$StateName %in% rockies)]<-"Rockies"
df1$Region[which(df1$StateName %in% midwest)]<-"Mid West"
df1$Region[which(df1$StateName %in% MaEc)]<-"Mid Atlantic / East Central"
boxplot(df1$value,main="Box plot of the Republican votes from 1956 to 1972")
boxplot(df1$value~df1$Region, main="Box plot of Republican votes by Region")
qplot(variable,value,data=df1,facets = Region~.,color=StateName,geom="line")
library(cluster)
library(reshape2)
data("votes.repub")
df<-as.data.frame(votes.repub[,26:30])
colnames(df)<-c(1956,1960,1964,1968,1972)
df["StateName"]<-rownames(df)
df1<-melt(df,id.vars = "StateName")
df1$StateName<-as.factor(df1$StateName)
df1$variable<-as.integer(as.character(df1$variable))
df1["Region"]<-as.character("NA")
NorthEast=c("Connecticut","Delaware","Maine","Massachusetts","New Hampshire","New Jersey","New York","Pennsylvania","Rhode Island","Vermont")
MaEc<-c("Kentucky","Maryland","North Carolina","South Carolina","Tennessee","Virginia","West Virginia")
South<-c("Alabama","Arkansas","Florida","Georgia","Louisiana","Mississippi","Oklahoma","Texas")
midwest<-c("Illinois","Indiana","Iowa","Kansas","Michigan","Minnesota","Missouri","Nebraska","Ohio","Wisconsin")
rockies<-c("Colorado","Idaho","Montana","North Dakota","South Dakota","Utah","Wyoming")
west<-c("Alaska","Arizona","California","Hawaii","Nevada","New Mexico","Oregon","Washington")
df1$Region[which(df1$StateName %in% NorthEast)]<-"North East"
df1$Region[which(df1$StateName %in% South)]<-"South"
df1$Region[which(df1$StateName %in% west)]<-"West"
df1$Region[which(df1$StateName %in% rockies)]<-"Rockies"
df1$Region[which(df1$StateName %in% midwest)]<-"Mid West"
df1$Region[which(df1$StateName %in% MaEc)]<-"Mid Atlantic / East Central"
boxplot(df1$value,main="Box plot of the Republican votes from 1956 to 1972")
boxplot(df1$value~df1$Region, main="Box plot of Republican votes by Region")
qplot(variable,value,data=df1,facets = Region~.,color=StateName,geom="line")
qplot(variable,value,data=df1,facets = Region~.,color=StateName,geom="line")+theme(legend.position="bottom")+guides(colour=guide_legend(nrow=5))+ggtitle("Votes by Country by Region")
qqnorm(df1$value,main="QQ plot for the entire dataset")
qqline(df1$value)
par(mfrow=c(2,3))
plotqq(NorthEast,df1,"Years","Votes Percentage","North East Region",2)
plotqq(MaEc,df1,"Years","Votes Percentage","Mid Atlantic/East Central Region",3)
plotqq(South,df1,"Years","Votes Percentage","Southern Region",4)
plotqq(midwest,df1,"Years","Votes Percentage","Mid West Region",2)
plotqq(rockies,df1,"Years","Votes Percentage","Rockies Region",3)
plotqq(west,df1,"Years","Votes Percentage","West Region",4)
plotqq <- function(statesList,df1,xlabc,ylabc,mainc,colc){
dataFrame1<-df1[which(df1$StateName %in% statesList),2:3]
#dataFrame1<-aggregate(dataFrame1,by=list("yearTrend"=dataFrame1$variable),mean)
#qqnorm(dataFrame1$value,xlab=xlabc,ylab = ylabc,main=mainc,col=colc)
#qqline(dataFrame1$value)
hist(dataFrame1$value,xlab=xlabc,ylab = ylabc,main=mainc,col=colc)
}
par(mfrow=c(2,3))
plotqq(NorthEast,df1,"Years","Votes Percentage","North East Region",2)
plotqq(MaEc,df1,"Years","Votes Percentage","Mid Atlantic/East Central Region",3)
plotqq(South,df1,"Years","Votes Percentage","Southern Region",4)
plotqq(midwest,df1,"Years","Votes Percentage","Mid West Region",2)
plotqq(rockies,df1,"Years","Votes Percentage","Rockies Region",3)
plotqq(west,df1,"Years","Votes Percentage","West Region",4)
# Letter value plots & qqplots based on LVs (Karen Kafadar 2006)
lval <- function(x) {
#tag <- c("M ","F ","E ","D ","C ","B ","A ","Z ","Y ","X ","W ","V","U","T",
# "S","R","Q","P","O","N")
# gau <- abs(qnorm(c(.25,.125,1/16,1/32,1/64,1/128,1/256,1/512,1/1024,1/2048,
#    1/4096, 1/8192, 1/16384, 1/32768, 1/65536)))
tag <- c("M",LETTERS[6:1],LETTERS[26:14])
gau <- abs(qnorm(1/2^(2:20)))
# col 1 = depth; 2 = lower; 3 = upper; 4 = mid; 5 = spread; 6 = pseudo-s
y <- sort(x[!is.na(x)])
n <- length(y)
m <- ceiling(log(n)/log(2)) + 1
depth    <- rep(0,m)
depth[1] <- (1 + n)/2
for (j in 2:m) {depth[j] <- (1 + floor(depth[j-1]))/2 }
ndepth <- n+1 - depth
out <- matrix(0, m, 6)
dimnames(out) <- list(tag[1:m],
c("Depth", "Lower","Upper", "Mid", "Spread","pseudo-s"))
out[1,2:3] <- median(y)
out[,1] <- depth
for (k in 2:m) {
out[k,2] <- ifelse(depth[k] - round(depth[k]) == 0,
y[depth[k]], (y[depth[k]-.5]+y[depth[k]+.5])/2 )
out[k,3] <- ifelse(ndepth[k] - round(ndepth[k]) == 0,
y[ndepth[k]], (y[ndepth[k]-.5]+y[ndepth[k]+.5])/2 )
}
out[1:m,4] <- (out[1:m,2] + out[1:m,3])/2
out[2:m,5] <- out[2:m,3] - out[2:m,2]
out[2:m,6] <- out[2:m,5]/(2*gau[1:(m-1)])
round(out,4)
}
lval.sub <- function(x) {
tag <- c("M",LETTERS[6:1],LETTERS[26:14])
# gau <- abs(qnorm(1/2^(2:20)))
# returns a vector (..., LE, LF, M, M, UF, UE, ...)
# of letter values only (not pseudo-spreads, etc)
y <- sort(x[!is.na(x)])
n <- length(y)
m <- ceiling(log(n)/log(2)) + 1
depth    <- rep(0,m)
depth[1] <- (1 + n)/2
for (j in 2:m) {depth[j] <- (1 + floor(depth[j-1]))/2 }
ndepth <- n+1 - depth
out <- matrix(0,m,3)
dimnames(out) <- list(tag[1:m], c("Depth", "Lower","Upper"))
out[1,2:3] <- median(y)
out[,1] <- depth
for (k in 2:m) {
out[k,2] <- ifelse(depth[k] - round(depth[k]) == 0,
y[depth[k]], (y[depth[k]-.5]+y[depth[k]+.5])/2 )
out[k,3] <- ifelse(ndepth[k] - round(ndepth[k]) == 0,
y[ndepth[k]], (y[ndepth[k]-.5]+y[ndepth[k]+.5])/2 )
}
# c(rev(out[,2]),out[,3])
out
}
stackbox <- function(x,k=7,...) {
# extension of standard boxplots  Heike Hofmann, 2005
# draws letter statistics up to level k
plot(x,rep(k/2,length(x)),ylim=c(0,k),ylab="",axes=F,type="n",...)
box()
axis(1)
n <- length(x)
qu <- quantile(x, c(.5^(k:1),1-.5^(1:k)))    # based on quantiles, not LVs
# that's easy to change, though
# determine & draw outliers
out <- (x<qu[1]) | (x>qu[2*k])
points(x[out],rep(k/2,sum(out)))
# draw boxes:
for (i in 1:k)
rect(qu[i], (k+i)/2,qu[2*k-i+1], (k-i)/2, col="grey")
}
lvplot <- function(x,tag,ylabname="", ...) {
# Karen Kafadar, 2006
# this may be slow for many groups
if(missing(tag)) tag <- rep(1,length(x))
y <- x[!is.na(x)]
tag <- tag[!is.na(x)]
groupid <- unique(tag)
ngroup <- length(groupid)
ni <- table(tag)
xlabname <- as.character(groupid)
plot(c(0.5,ngroup+0.5),range(y,na.rm=T),xlab="",axes=F,type="n",
ylab=ylabname,...)
box()
axis(1,at=1:ngroup,labels=xlabname)
axis(2,at=pretty(y))
for (j in 1:ngroup) {
x <- y[tag==groupid[j]]
n <- ni[j]
# ensure that k is at least 2, so at least fourths are shown
k <-  1+max(2, 1 + ceiling(log(n,2) - log(4*1.96^2,2)))
lval.x <- lval.sub(x)
qu <- c(rev(lval.x[1:k,2]),lval.x[1:k,3])
med <- qu[k]
lfence <- 4*lval.x[2,2] - 3*lval.x[2,3]
ufence <- 4*lval.x[2,3] - 3*lval.x[2,2]
lfourth <- lval.x[2,2]
ufourth <- lval.x[2,3]
lower.adj <- ifelse(min(x) < lfence, min(x[x > lfence]), min(x))
upper.adj <- ifelse(max(x) > ufence, max(x[x < ufence]), max(x))
# draw boxes:
wid <- 1/2^(k:1) - 0.01
if (n < 30) {   # i.e., k=2: draw boxplot
if (n < 10) {
points(rep(j,n),x)
segments(j-.49, med, j+.49, med)  # line for median
}
else {
rect(j-wid[k-1], lfourth, j+wid[k-1], ufourth, col="grey")
segments(j-.49, med, j+.49, med)  # line for median
out <- (x < lower.adj) | (x > upper.adj)
points(rep(j,sum(out)),x[out])
segments(j,lfourth,j,lower.adj,lty=2)
segments(j,ufourth,j,upper.adj,lty=2)
}
}
else {
# out <- (x < min(lfence, qu[1])) | (x > max(ufence, qu[2*k]))
out <- (x < qu[1]) | (x > qu[2*k])
points(rep(j,sum(out)),x[out])
for (i in 1:k)
rect(j-wid[i], qu[i], j+wid[i], qu[2*k-i+1], col="grey")
}
}
}
qqnormLV <- function(y, main="Normal QQ Plot (LVs)",
xlab="theoretical letter values",
ylab="sample letter values", plot.it = TRUE, ...) {
# QQ plot on letter values only (Karen Kafadar, 2006)
lv.out <- lval(y[!is.na(y)])
n <- length(y[!is.na(y)])
yLV <- c(rev(lv.out[,2]),lv.out[-1,3])
zLV <- qnorm((c(rev(lv.out[,1]),n+1-lv.out[-1,1]) - 1/3)/(n+1/3))
plot(zLV,yLV,main=main, xlab=xlab, ylab=ylab)
# slope of line through 1st & 3rd quartiles:
slope.lv <- (lv.out[2,3]-lv.out[2,2])/1.349
int.lv <- lv.out[2,3] - slope.lv*.6745
abline(int.lv,slope.lv)
if(!plot.it) list(x = zLV, y=yLV)
}
plot.sym <- function(x) {
# Plot for transformations for symmetry UREDA Sec 4C, p.105
# Note: if the plot is not straight, transform x and try again
y <- x[!is.na(x)]
ll <- lval(y)
mm <- ll[1,2]  # median
m <- nrow(ll)
xx <- ( (ll[2:m,3]-mm)^2 + (mm-ll[2:m,2])^2 )/(4*mm)
yy <- ( ll[2:m,3] + ll[2:m,2] )/2 - mm
plot(xx,yy)
rr <- lm(yy ~ xx)
print(rr$coef)
abline(rr)
pwr <- 1 - rr$coef[2]
title("",paste("Approximate power =",format(round(pwr,2))))
}
z<-cbind(1:10,1:10)
lvplot(z)
lvplot(z,2)
lvplot(z,3)
lvplot(z,1)
lvplot(z)
df1
df1[2:3]
z<-df1[2:3]
lvplot(z)
lvplot(z$value)
A<-c(19.50,16.72,20.92,16.42,21.22,15.40,20.68,14.55,20.23,
15.11,20.95,16.68,14.67,16.50,22.15,20.14,18.33,14.20,
11.61,22.24,18.75,14.22,15.03,22.07,13.34,12.73,19.23,
19.74,19.74,20.60,19.29,18.22,23.65,17.44,13.07,19.00,
18.44,17.25,19.19,12.77,14.10,16.69,16.92,21.92,20.84,
18.43,19.54,23.61,21.40,28.34,20.43,20.43,15.58,16.58,
22.44,14.59,18.70,16.79,14.12,13.67,15.94,24.04,15.42,
16.26,17.74,12.37,16.87,16.28,17.97,19.56,13.56,16.13,
18.20,17.29,19.38,20.47,16.75,16.69,15.93,14.73,17.83,
19.78,15.78,16.17,17.18,13.90,15.33,16.10,12.03,17.92,
23.56,11.35,19.10,12.91,18.32,19.24,11.57,14.33,13.60,
13.12,11.19,14.33,16.91,13.03,17.32,10.70,12.56,16.04)
lvplot(A)
oar(mfrow=c(2,1))
par(mfrow=c(2,1))
lvplot(A)
par(mfrow=c(1,2))
lvplot(A)
hist(A)
curve(density(A))
curve(density(A))
curve(density(A,adjust = "gaussian"))
curve(density(A,adjust = "gaussian"))
density(A,adjust = "gaussian")
density(A,kerel = "gaussian")
density(A)
curve(density(A))
plot(density(A))
lines(density(A))
density(A)
plot(density(A))
hist(A)
curve(density(A))
lines(density(A))
lines(density(A,kernel = "gaussian"))
hist(A,freq=F)
lines(density(A,kernel = "gaussian"))
par(mdfrow=c(2,1))
par(mfrow=c(2,1))
lvplot(A)
par(mfrow=c(1,2))
hist(A,freq=F)
lines(density(A,kernel = "gaussian"))
lvplot(A)
?boxplot
boxplot(A,notch = true)
boxplot(A,notch = TRUE)
updateR()
updater()
library(installR)
library(installr)
install.packages("installr")
install.packages("installr")
install.packages("installr")
q()
library(updater)
library(updateR)
library(installR)
library(installr)
installR()
updateR()
q()
rgamma(n = 1000,shape=-1)
hist(rgamma(n = 1000,shape=-1))
hist(rgamma(n = 1000,shape=1))
hist(rgamma(n = 1000,shape=0.1))
hist(rgamma(n = 1000,shape=1000))
hist(rgamma(n = 1000,shape=100000000))
lapply
lapply(1:10,e^x)
lapply(1:10,x^x)
x <- sample(1:100000000000,1000)
x <- sample(1:100000,1000)
sqrt(1000)
install.packages("RMySQL")
install.packages("dplyr")
?fetch
library(dplyr)
library(RMySQL)
library(ggplot2)
library(dplyr)
library(RMySQL)
library(ggplot2)
?"fetch"
con <- dbConnect(MySQL(), user="apps", password="", dbname="test", host="localhost")
rs <- dbSendQuery(con, "select * from chicagocrimes where year > 2011 and Community_Area is not null;")
data <- fetch(rs, n=-1)
huh <- dbHasCompleted(rs)
dbClearResult(rs)
dbDisconnect(con)
data$Year<-as.factor(data$Year)
data$Community_Area<-as.factor(data$Community_Area)
gplot(count(Primary_Type))~year,data=data)
gplot(count(Primary_Type)),year,data=data)
gplot(count(Primary_Type)~year,data=data)
qplot(count(Primary_Type)~year,data=data)
qplot(count(Primary_Type),year,data=data)
View(data)
dataSet<-data
rm(data)
plot(dataset)
plot(dataSet)
qplot(data=dataSet,x = Primary_Type,y=year)
qplot(data=dataSet,x = Primary_Type,y=Year)
qplot(data=dataSet,x = count(Primary_Type),y=year)
qplot(data=dataSet,x = count(Primary_Type),y=year,group=year)
qplot(data=dataSet,x = count(Primary_Type),y=year,group=Year)
library(ggplot2)
ggplot
View(midwest)
remove(midwest)
remove(ggplot2.midwest)
rm(midwest)
rm(ggplot2.midwest)
rm(ggplot2:.midwest)
rm(ggplot2:midwest)
diamonds
d <- ggplot(diamonds,
aes(x=carat, y=price))
d + geom_point()
d + geom_point(aes(colour = carat))
d + geom_point(aes(colour = carat))
+ scale_colour_brewer()
ggplot(diamonds) +
geom_histogram(aes(x=price))
ggplot(diamonds) +
geom_histogram(aes(x=price))+theme_bw()
library("MASS", lib.loc="~/R/win-library/3.2")
library("car", lib.loc="~/R/win-library/3.2")
library("lattice", lib.loc="C:/Program Files/R/R-3.2.2/library")
?cloud
cloud(Cars93$Length)
library(car)
library(MASS)
library(lattice)
p1=cloud(disp~hp*wt,data=mtcars)
p2=cloud(disp~hp*drat,data=mtcars)
p3=cloud(hp~wt*drat,data=mtcars)
p4=cloud(hp~wt*disp,data=mtcars)
print(p1, position = c(0,0,.4,.4), more = TRUE)
print(p2, position = c(1,0,.6,.4), more = TRUE)
print(p3, position = c(1,1,.6,.6), more = TRUE)
print(p4, position = c(0,1,.4,.6))
?rlm
fit1<-rlm(mpg~disp+hp+hrat,data=mtcars)
fit1<-rlm(mpg~disp+hp,data=mtcars)
qqPlot(fit1)
plot(fit1)
library(foreign)
cdata <- read.dta("http://www.ats.ucla.edu/stat/data/crime.dta")
summary(ols <- lm(crime ~ poverty + single, data = cdata))
d1 <- cooks.distance(ols)
r <- stdres(ols)
a <- cbind(cdata, d1, r)
a[d1 > 4/51, ]
David
temp
temp <- scan()
temp <- matrix(temp, byrow=T, ncol=7); temp
dimnames(temp) <- list(c("Caribou","Washington","Laredo"),
c("Jan","Feb","Mar","Apr","May","Jun","Jul")); temp
medpolish(temp)
b<-cbind(c(0,1),c(1,1))
b
b^2
b^3
b*b
b*b*b
as.matrix(b)
b<-as.matrix(b)
b*b
b*b*b
log(16,4)
log(3,2)
library(ggplot2)
dataset<-diamonds
dataset$carat
head(dataset)
lmfir<-lm(carat~x+y+z)
lmfir<-lm(carat~x+y+z,data=dataset)
library(car)
influencePlot(lmfit)
influencePlot(lmfir)
plot(lmfir)
outlierTest(lmfir)
qqPlot(fit)
qqPlot(lmfir)
dataset[27416,]
setwd("C:/Users/Ganesh/Google Drive/Courses/Stat Consulting/Projects/Kiessling")
library(memisc)
spss.fixed.file("data_10_14_15.sav")
spss.fixed.file()
spss.fixed.file("data_10_14_15.sav")
spss.system.file("data_10_14_15.sav")
as.data.set(spss.system.file("data_10_14_15.sav"))
dataset<-as.data.set(spss.system.file("data_10_14_15.sav"))
View(dataset)
df<-as.data.frame(dataset)
df
View(df)
?t
?t.test
t.test(df$sittingbrfss_pre,df$sittingbrfss_post)
setwd("C:/Users/Ganesh/Google Drive/Courses/CSCI B 565/Homework/Homework 2")
library(rpart)
library(rpart.plot)
library(rattle)
library(entropy)
#Load the data into R
setwd("C:/Users/Ganesh/Google Drive/Courses/CSCI B 565/Homework/Homework 2")
del<-read.csv(file = "breast-cancer-wisconsin.data",header = FALSE,na.strings = "?")
head(del)
colnames(del)<-c("SCN","Clump.Thickness","Cell.Size","Cell.Shape","M.Adhesion","SECS","B.Nuclei","B.Chromatin","N.Nucleoli","Mitoses","class")
delstar<-del[complete.cases(del),]
delm<-del[!complete.cases(del),]
write.csv(delstar,"bcData.csv",row.names = FALSE)
findClass<-function(df,c,label){
i=length(c)
a=c()
for(i in c){
a=c(a,df[which(df$SCN==i),11])
}
#print(a)
qplot(a,main=label,xlab="Centroid")
print(length(a[a==2]))
print(length(a[a==4]))
}
C1=c(1002945, 1016277, 1017122, 1044572, 1050670, 1054590, 1054593, 1072179, 1080185, 1084584, 1091262, 1099510, 1100524, 1102573, 1103608, 1105257, 1106829, 1110102, 1110503, 1110524, 1111249, 1112209, 1113483, 1115282, 1116116, 1118039, 1120559)
C2=c(1000025, 1015425, 1017023, 1018099, 1018561, 1033078, 1033078, 1035283, 1036172, 1041801, 1043999, 1047630, 1048672, 1049815, 1050718, 1056784, 1059552, 1065726, 1066373, 1066979, 1067444, 1070935, 1070935, 1071760, 1074610, 1075123, 1079304, 1081791, 1103722, 1105524, 1106095, 1108370, 1108449, 1113038, 1113906, 1115293, 1116132, 1116192, 1116998, 1117152, 1121732)
findClass(delstar,C1,"Cluster 1 Histogram")
#correct 40, wrong 5
findClass(delstar,C2,"Cluster 2 Histogram")
#correct 31, wrong 2
library(ggplot2)
#Set 1:
C1=c(1002945, 1016277, 1017122, 1044572, 1050670, 1054590, 1054593, 1072179, 1080185, 1084584, 1091262, 1099510, 1100524, 1102573, 1103608, 1105257, 1106829, 1110102, 1110503, 1110524, 1111249, 1112209, 1113483, 1115282, 1116116, 1118039, 1120559)
C2=c(1000025, 1015425, 1017023, 1018099, 1018561, 1033078, 1033078, 1035283, 1036172, 1041801, 1043999, 1047630, 1048672, 1049815, 1050718, 1056784, 1059552, 1065726, 1066373, 1066979, 1067444, 1070935, 1070935, 1071760, 1074610, 1075123, 1079304, 1081791, 1103722, 1105524, 1106095, 1108370, 1108449, 1113038, 1113906, 1115293, 1116132, 1116192, 1116998, 1117152, 1121732)
findClass(delstar,C1,"Cluster 1 Histogram")
findClass(delstar,C2,"Cluster 2 Histogram")
C1=c(1121919, 1124651, 1126417, 1131294, 1132347, 1133041, 1133136, 1136142, 1137156, 1143978, 1143978, 1147044, 1152331, 1155546, 1156272, 1156948, 1157734, 1158247, 1160476, 1164066, 1165297, 1165790, 1167439, 1167471, 1168359, 1169049, 1171710, 1171795, 1173235, 1173347, 1173347, 1173514, 1173681, 1174057, 1174057, 1176406, 1177027, 1177512, 1178580, 1179818, 1180523, 1180831, 1181356, 1182404, 1182410)
C2=c(1123061, 1125035, 1147699, 1147748, 1148278, 1148873, 1165926, 1166630, 1166654, 1168736, 1170419, 1170420, 1171710, 1171845, 1172152, 1173216, 1173509, 1174131, 1174428, 1175937, 1176881, 1177399, 1180194)
findClass(delstar,C1,"Cluster 1 Histogram")
findClass(delstar,C2,"Cluster 2 Histogram")
C1=c(1183983, 1185609, 1187805, 1189266, 1189286, 1192325, 1196295, 1196915, 1197993, 1198128, 1200847, 1200892, 1200952, 1201936, 1202812, 1205138, 1205579, 1206695, 1206841, 1207986, 1210963, 1211202, 1213375, 1214966, 1216694, 1218105, 1218741)
C2=c(1183240, 1183516, 1183911, 1184184, 1184241, 1185610, 1187457, 1188472, 1190394, 1190485, 1193091, 1193210, 1197080, 1197270, 1197440, 1197979, 1198641, 1199219, 1199731, 1199983, 1200772, 1201834, 1202125, 1203096, 1204242, 1204898, 1206089, 1208301, 1212232, 1212251, 1212422, 1212422, 1213383, 1214092, 1214556, 1216947, 1217051, 1217264, 1218860, 1218860, 1219406)
C1=c(1183983, 1185609, 1187805, 1189266, 1189286, 1192325, 1196295, 1196915, 1197993, 1198128, 1200847, 1200892, 1200952, 1201936, 1202812, 1205138, 1205579, 1206695, 1206841, 1207986, 1210963, 1211202, 1213375, 1214966, 1216694, 1218105, 1218741)
C2=c(1183240, 1183516, 1183911, 1184184, 1184241, 1185610, 1187457, 1188472, 1190394, 1190485, 1193091, 1193210, 1197080, 1197270, 1197440, 1197979, 1198641, 1199219, 1199731, 1199983, 1200772, 1201834, 1202125, 1203096, 1204242, 1204898, 1206089, 1208301, 1212232, 1212251, 1212422, 1212422, 1213383, 1214092, 1214556, 1216947, 1217051, 1217264, 1218860, 1218860, 1219406)
findClass(delstar,C1,"Cluster 1 Histogram")
findClass(delstar,C2,"Cluster 2 Histogram")
C1=c(1219525, 1219859, 1221863, 1222047, 1222936, 1223793, 1225799, 1226612, 1227210, 1227481, 1228152, 1230175, 1230688, 1231387, 1232225, 1241559, 1241679, 1242364, 1243256, 144888, 145447, 191250, 1017023, 1100524, 1116116, 1168736, 242970, 255644, 263538, 274137, 303213, 314428, 1198641, 320675, 324427, 390840, 320675, 476903)
C2=c(1219406, 1220330, 1223282, 1223426, 1223967, 1224329, 1226012, 1227244, 1228311, 1231706, 1236043, 1270479, 1276091, 1277018, 128059, 1285531, 1287775, 167528, 183913, 1182404, 1182404, 1198641, 1182404, 385103, 411453, 428903, 431495, 434518, 452264, 456282)
findClass(delstar,C1,"Cluster 1 Histogram")
findClass(delstar,C2,"Cluster 2 Histogram")
C1=c(486662, 535331, 560680, 561477, 625201, 636130, 646904, 666090, 666942, 673637, 684955, 688033, 693702, 704097, 718641, 733639, 740492, 743348, 756136, 764974, 770066, 792744, 798429, 704097, 810104, 814265, 814911, 826923, 830690, 831268, 832226, 836433, 837082)
C2=c(488173, 492268, 508234, 527363, 529329, 543558, 555977, 601265, 606722, 616240, 63375, 635844, 640744, 653777, 659642, 667204, 691628, 706426, 709287, 721482, 730881, 733823, 752904, 760001, 760239, 76389, 785208, 785615, 797327, 806423, 809912, 822829, 832567, 846832, 850831)
findClass(delstar,C1,"Cluster 1 Histogram")
#33 correct 3 wrong
findClass(delstar,C2,"Cluster 2 Histogram")
#36 correct 1 wrong
C1=c(859350, 866325, 873549, 877291, 877943, 95719, 160296, 846423, 1080233, 1151734, 1211265, 1238633, 1238948, 1239347, 1257200)
C2=c(855524, 857774, 859164, 888169, 888523, 896404, 897172, 342245, 428598, 492561, 493452, 493452, 521441, 560680, 636437, 640712, 654244, 657753, 685977, 805448, 1002504, 1022257, 1026122, 1071084, 1114570, 1114570, 1116715, 1131411, 1156017, 1158247, 1158405, 1168278, 1176187, 1196263, 1196475, 1206314, 1213784, 1223003, 1223306, 1223543, 1229929, 1231853, 1234554, 1236837, 1237674, 1238021, 1238915, 1239232, 1239967, 1240337, 1253505, 1255384, 1257648)
findClass(delstar,C1,"Cluster 1 Histogram")
#58 correct 1 wrong
findClass(delstar,C2,"Cluster 2 Histogram")
#15 correct 0 wrong
#Set 1:
C1=c(1002945, 1016277, 1017122, 1044572, 1050670, 1054590, 1054593, 1072179, 1080185, 1084584, 1091262, 1099510, 1100524, 1102573, 1103608, 1105257, 1106829, 1110102, 1110503, 1110524, 1111249, 1112209, 1113483, 1115282, 1116116, 1118039, 1120559)
C2=c(1000025, 1015425, 1017023, 1018099, 1018561, 1033078, 1033078, 1035283, 1036172, 1041801, 1043999, 1047630, 1048672, 1049815, 1050718, 1056784, 1059552, 1065726, 1066373, 1066979, 1067444, 1070935, 1070935, 1071760, 1074610, 1075123, 1079304, 1081791, 1103722, 1105524, 1106095, 1108370, 1108449, 1113038, 1113906, 1115293, 1116132, 1116192, 1116998, 1117152, 1121732)
findClass(delstar,C1,"Cluster 1 Histogram")
